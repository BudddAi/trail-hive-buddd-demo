---
import ModuleWrapper from '../utils/ModuleWrapper.astro';
import Heading from './molecules/Heading.astro';
import Button from './molecules/Button.astro';
import InfoCard from './molecules/InfoCard.astro';

interface HeadingComponent {
  text: string;
  tag?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
  subheading?: string;
  preheading?: string;
}

interface ButtonComponent {
  text: string;
  url?: string;
  style?: 'solid-dark' | 'outline-dark' | 'ghost' | 'outline-light' | 'solid-light' | 'solid-green';
}

interface FeatureImageCard {
  image?: {
    url: string;
    alternativeText?: string;
  };
  title: string;
  description?: string;
}

interface CardsProps {
  heading: HeadingComponent;
  button: ButtonComponent;
  cards?: FeatureImageCard[];
  spacing?: any;
}

export interface Props extends CardsProps {}

const { heading, button, cards = [], spacing } = Astro.props;
---

<ModuleWrapper className="cards" spacing={spacing}>
  <div class="container">
    <div class="bg-color-37 rounded-radius-5 p-6 sm:p-8 md:p-16 lg:p-space-8">
      <div class="grid grid-cols-1 lg:grid-cols-12 gap-12 lg:gap-8 items-start">
        <div class="lg:col-span-4 flex flex-col gap-8 lg:gap-10 items-start">
          <Heading 
            preheading={heading.preheading}
            heading={heading.text}
            as={heading.tag}
          />
          <Button 
            label={button.text}
            href={button.url}
            variant={button.style}
          />
        </div>
        {cards && cards.length > 0 && (
          <div class="lg:col-span-8 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
            {cards.map(card => (
              <InfoCard 
                imageSrc={card.image?.url}
                imageAlt={card.image?.alternativeText || card.title}
                title={card.title}
                description={card.description}
              />
            ))}
          </div>
        )}
      </div>
    </div>
  </div>
</ModuleWrapper>